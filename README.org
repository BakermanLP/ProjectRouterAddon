#+title: Project Router Addon - Installation Raspberry PI
#+author: Michael Bäcker
#+date: 2025-05-07
#+description: Wie bringen wir einen Mehrwert in unser Heimnetzwerk

In diesem Projekt möchte ich euch zeigen, wie man sein Heimnetzwerk besser machen kann mit einem Mini Server. Ich verwende hier einen Raspberry Pi, es geht aber mit vielen anderen Maschinen, jedoch ist der Raspberry Pi die Methode mit dem geringsten Strombedarf bisher. Und bitte dabei auch bedenken, dass die Maschine 24/7/365 läuft. Da kommt es eigentlich auf jedes Watt an, dass wir uns sparen können.

* Inhalt :toc:
- [[#links-aus-dem-video][Links aus dem Video]]
- [[#video][Video]]
- [[#raspberry-pi-installation][Raspberry Pi Installation]]
- [[#konfigurationen][Konfigurationen]]
  - [[#hostnamen-setzen][Hostnamen setzen]]
  - [[#system-aktualisieren][System aktualisieren]]
  - [[#snap-entfernen][Snap entfernen]]
  - [[#docker-installieren][Docker installieren]]
  - [[#netzwerkkonfiguration][Netzwerkkonfiguration]]
  - [[#netzwerk-konfiguration-kontrollieren][Netzwerk Konfiguration kontrollieren]]
  - [[#lokalen-resolver-deaktivieren][Lokalen Resolver deaktivieren]]
  - [[#testen-des-benutzers][Testen des Benutzers]]
- [[#nächsten-schritte][Nächsten Schritte]]

* Links aus dem Video
+ https://www.raspberrypi.com/software/
+ https://quad9.net/de/
+ https://github.com/pi-hole/docker-pi-hole/

* Video
https://www.youtube.com/watch?v=_DBCLYuQs7E

* Raspberry Pi Installation

Mit dem Tool Raspberry Pi Imager erzeugt ihr euch einen USB Stick oder eine Memory Card für den Raspberry Pi.
Bei der OS Auswahl empfehle ich im Moment (Mai 2025) Ubuntu Server 24.04 LTS 64 Bit

Das Bootet ihr dann und könnt euch danach mit dem Benutzernamen ubuntu und dem Passwort ubuntu per SSH auf der Maschine anmelden

* Konfigurationen
** Hostnamen setzen
#+begin_src bash
sudo vi /etc/hostname
#+end_src

Nun folgende Tastenkombinationen
#+begin_src vim
D (Zum löschen des Inhalts der Zeile
i (Zum aktivieren des Insert Modus)
pi-one (Euer Hostnamen)
ESC (zum beenden des Insert Modus)
:wq
#+end_src

Damit ist der Hostnane gesetzt

** System aktualisieren

#+begin_src bash
sudo apt update
sudo apt upgrade
#+end_src

** Snap entfernen
#+begin_src bash
  sudo -i
  apt remove snapd
  rm -r /snap /var/snap /var/lib/snapd
  # Eventuell nach einem Reboot nochmal ausführen
#+end_src

** Docker installieren

#+begin_src bash
  apt install docker.io docker-compose-v2
  usermod -a -G docker ubuntu
  exit
#+end_src

** Netzwerkkonfiguration

Bitte an der folgenden Datei noch eventuell notwendige Änderungen vornehmen.

#+begin_src bash
sudo vi /etc/netplan/50-cloud-init.yaml
#+end_src

/etc/netplan/50-cloud-init.yaml
#+begin_src yaml 
network:
    ethernets:
        eth0:
            addresses:
            - 192.168.1.51/24
            dhcp4: false
            gateway4: 192.168.1.1
            nameservers:
                addresses:
                - 9.9.9.9
                - 1.1.1.1
            optional: true
    version: 2
#+end_src

** Netzwerk Konfiguration kontrollieren

#+begin_src bash
  ip addr ls dev eth0

  networkctl status eth0
#+end_src

** Lokalen Resolver deaktivieren  

#+begin_src bash
sudo vi /etc/systemd/resolved.conf
#+end_src
#+begin_src ini 
[Resolve]
DNSStubListener=no
#+end_src
#+begin_src bash
sudo systemctl restart systemd-resolved.service
#+end_src

** Testen des Benutzers
#+begin_src bash
id
#+end_src
Hier müsste in der Auflistung der Gruppen auch die Gruppe docker auftauchen. Wenn ja, dann sollte auch der nächste Befehl funktionieren

#+begin_src bash
docker ps
#+end_src

* Nächsten Schritte
+ Installation Pi-Hole [[docker/pi-hole/README.org][Anleitung]]
+ Installation NGinx Proxy Manager [[docker/nginx-proxy-manager/README.org][Anleitung]]
+ Installation SearXNG [[docker/searxng/README.org][Anleitung]]
